name: Build and Deploy
on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install AWS CLI and Configure credentials
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip
          pip3 install awscli --upgrade
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set default.region us-east-1
          aws sts assume-role --role-arn ${{ secrets.IAM_ROLE_ARN }} --role-session-name "GitHubAction"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: Manage credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Get temporary IAM credentials
        id: sts
        run: |
          aws sts assume-role --role-arn ${{ secrets.IAM_ROLE_ARN }} --role-session-name "GitHubAction"
          echo "::set-output name=access_key::$(echo '${{ steps.sts.outputs.stdout }}' | jq -r '.Credentials.AccessKeyId')"
          echo "::set-output name=secret_key::$(echo '${{ steps.sts.outputs.stdout }}' | jq -r '.Credentials.SecretAccessKey')"
          echo "::set-output name=session_token::$(echo '${{ steps.sts.outputs.stdout }}' | jq -r '.Credentials.SessionToken')"
          echo "AWS_ACCESS_KEY_ID=$(echo '${{ steps.sts.outputs.stdout }}' | jq -r '.Credentials.AccessKeyId')" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=$(echo '${{ steps.sts.outputs.stdout }}' | jq -r '.Credentials.SecretAccessKey')" >> $GITHUB_ENV
          echo "AWS_SESSION_TOKEN=$(echo '${{ steps.sts.outputs.stdout }}' | jq -r '.Credentials.SessionToken')" >> $GITHUB_ENV
        shell: bash
        env:
          AWS_ACCESS_KEY_ID: ${{ steps.sts.outputs.access_key }}
          AWS_SECRET_ACCESS_KEY: ${{ steps.sts.outputs.secret_key }}
          AWS_SESSION_TOKEN: ${{ steps.sts.outputs.session_token }}
      - name: Copy files to EC2
        run: |
          aws configure set region us-east-1
          mkdir ~/.ssh
          touch ~/.ssh/known_hosts
          ssh-keyscan -t rsa ${{ secrets.AWS_HOST }} >> ~/.ssh/known_hosts
          curl https://whatsmyip.dev/api/ip
          ssh-keygen -t rsa -b 4096 -f ~/.ssh/id_rsa -N ""
          ssh-copy-id -i ~/.ssh/id_rsa.pub ${{ secrets.AWS_USER }}@${{ secrets.AWS_HOST }}
          scp -o "StrictHostKeyChecking=no" -i ~/.ssh/id_rsa -r * ${{ secrets.AWS_USER }}@${{ secrets.AWS_HOST }}:/var/www/html/
        env:
          AWS_ACCESS_KEY_ID: ${{ steps.sts.outputs.access_key }}
          AWS_SECRET_ACCESS_KEY: ${{ steps.sts.outputs.secret_key }}
          AWS_SESSION_TOKEN: ${{ steps.sts.outputs.session_token }}